{"version":3,"sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactItem/ContactItem.module.css","components/Form/Form.module.css"],"names":["Form","onFormSubmit","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","type","pattern","title","onChange","target","value","required","className","s","btnSubmit","Filter","filter","onFilterChange","ContactItem","contact","onDeleteContact","item","message","btnDelete","onClick","id","ContactList","contacts","map","App","setContacts","setFilter","useEffect","savedContacts","JSON","parse","localStorage","getItem","setItem","stringify","find","alert","newContact","nanoid","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.757b3627.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nimport s from \"./Form.module.css\";\n\nexport default function Form({ onFormSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onFormSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <p>Name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        required\n      />\n      <p> Tel</p>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        required\n      />\n      <button className={s.btnSubmit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from \"prop-types\";\n\nexport default function Filter({ filter, onFilterChange }) {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"find\"\n        onChange={(e) => onFilterChange(e.target.value)}\n        value={filter}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport s from \"./ContactItem.module.css\";\n\nexport default function ContactItem({ contact, onDeleteContact }) {\n  return (\n    <>\n      <li className={s.item}>\n        <p className={s.message}>\n          {contact.name}: {contact.number}\n        </p>\n        <button\n          className={s.btnDelete}\n          onClick={(e) => onDeleteContact(e.target.id)}\n          id={contact.id}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport ContactItem from \"./ContactItem\";\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <ul>\n        {contacts.map((contact) => (\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            onDeleteContact={onDeleteContact}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (savedContacts) {\n      setContacts(savedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onFormSubmit = (name, number) => {\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n    const newContact = { name, number, id: nanoid() };\n    setContacts([newContact, ...contacts]);\n  };\n\n  const getFilteredContacts = () =>\n    contacts.filter((contact) => contact.name.toLowerCase().includes(filter));\n\n  const onDeleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form onFormSubmit={onFormSubmit}></Form>\n      </div>\n\n      <h2>Contacts</h2>\n\n      <Filter\n        filter={filter}\n        onFilterChange={(value) => setFilter(value.toLowerCase())}\n      />\n      <ContactList\n        contacts={getFilteredContacts()}\n        onDeleteContact={onDeleteContact}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactItem_btnDelete__2oO_L\",\"message\":\"ContactItem_message__4VhEW\",\"item\":\"ContactItem_item__248Sv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSubmit\":\"Form_btnSubmit__18yVs\"};"],"sourceRoot":""}